<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAABILAAASCwAAAAEAAAAB
        AAC9vb0A1tbWANfX1gDY19YAubm5APv8/wDm6f4A4eb+AOLm/gDPz88AXnb4AERg9gBFYfYA5en+ANDQ
        zgAkRfUAJkb1ACVG9QBDX/YA4eX+AChI9QAnSPUAJ0f1AC1L9QAxT/UAME71ACZH9QAvTfUAPFn2AFdv
        9wB7jfkAk6P6AKu2+wC1vvsAsrz7AJup+gBZcfcARWD2ACVF9QAsS/UAOFX2AENe9gBjefcAh5f5AK64
        +wDQ1v0A6Or+APf3/wD+/v8A////AM7U/AAuTPUANVP1ADlW9gBAXPYAU2z3AHGF+ACLm/oAqLT7AMTL
        /ADZ3v0A7e/+APr7/wDl6P4AU2v3ADxY9gBwhPgAkqL6AL7G/ADHzvwA1tz9APP0/gD8/P8A/f3/AOLm
        /QDM0vwAv8b8AL3F/ACstvsAqrT7AHmM+QBUbfcAr7r7APT1/gDK0fwAjZ36AGuA+ABNZ/YAPVn2ADdU
        9gAzUfUA4OX+AF519wDW2/0A9vf+AN/j/QDV2v0A4+f+AE1n9wB4ivgAtb37AJ+r+gCFl/kAc4f4AGB2
        9wBGYfYA2t/9ANPY/QA+W/YANFH1ACtK9QDg5P4Ayc/8AFlw9wDp7P4Aan74APDx/gB0h/gAqbP7AC9O
        9QCAkvkA+fn/AIqa+QCJm/oAmaj6AH+R+QCcqvoAr7n7AKm1+wD7+/8AfpH5AIaY+QCjr/sALUz1ALzE
        /ABIYvYAsbv7ACpJ9QBoffgAyM/8AMzT/ABiePcAO1j2AERf9gDPz84AtbW1AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABAkODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4OkJEBBQ0TBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHEw0FCQIGChIMDAwMDAwMDAwljxIlDAwMDAwMDAwMDAwSCg0OAwcLDxAQEBAQEBAQEBA1jhQQ
        EBAQEBAQEBAQEA8SEw4DCAwQFBQUFBQUFBSJiouMjRQUFBQUFBQUFBQUEAwHDgMIDBAUFBQUFBQUGodr
        MTGIWhYUFBQUFBQUFBQQDAcOAwgMEBQUFBQUFBQRdVMxMYZZFhQUFBQUFBQUFBAMBw4DCAwQFBQUFBQU
        FBFVSTExhIUUFBQUFBQUFBQUEAwHDgMIDBAUFBQUFBQUEXwxMTCDJhQUFBQUFBQUFBQQDAcOAwgMEBQU
        FBQUFBQngDExgYImFBQUFBQUFBQUFBAMBw4DCAwQFBQUFBQUFRt/MTEFfSYUFBQUFBQUFBQUEAwHDgMI
        DBAUFBQUFBQUEH4xMQV9JhQUFBQUFBQUFBQQDAcOAwgMEBQUFBQUFBQmfDExBX0mFBQUFBQUFBQUFBAM
        Bw4DCAwQFBQUFBQUFBEfMTFIeCYUFBQUFBQUFBQUEAwHDgMIDBAUFBQUFBQUEXpIMTF7DxQUFBQUFBQU
        FBQQDAcOAwgMEBQUFBQUFBQReHkxMR8WFBQUFBQUFBQUFBAMBw4DCAwQFBQUFBQUFBB1UzExdncVFBQU
        FBQUFBQUEAwHDgMIDBAUFBQUFBQUEHN0MTEiWhYUFBQUFBQUFBQQDAcOAwgMEBYWFhQUFBQQcXIxMU1Z
        FhQUFBQUFBQUFBAMBw4DCCUWbShtbiYmEQ8LbzExcEEWFBQUFBQUFBQUEAwHDgMHYmMhRGRlZmdoaVFq
        MTFrbBoUFBQUFBQUFBQQDAcOA1tcXTExMTFJXj1fYEcxMWFRECYQFhYWFhYVFBAMBw4DE1FSU0kxMTEx
        MTExMTExBVRVVldYKFlaGBkUEAwHDgMHDEFCQyxERUYGR0gxMTExMUlHSktMTSJOT1AZCwcOAwgMJhAQ
        MzQ1Njc4OTo7PD0+MTExMTExMTExP0ASBw4DCAwQFBQUFhYaEBAmJygpKissLS4vMDExMTEyJRIHDgMI
        DBAUFBQUFBQUFBQUFhoQEBscHR4fICEiIyQWJQcOAwgMEBQUFBQUFBQUFBQUFBQUFRYQERAXGBkUEBAM
        Bw4DBwsPEBAQEBAQEBAQEBAQEBAQEBAQEBAREBAQDxITDgIGCgsMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwLCg0OAQUGBwgICAgICAgICAgICAgICAgICAgICAgICAcGBQkAAQIDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwIBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>